/**
 * Test dss option
 * 3 specified data segments are sent to the kernel kernel and
 * 3 ack are received from it
 */


0   socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0  setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
+0  bind(3, ..., ...) = 0
+0  listen(3, 1) = 0

+0  < S 0:0(0) win 32792 <mss 1460,sackOK,nop,nop,nop,wscale 7,mp_capable a>
+0  > S. 0:0(0) ack 1 win 28800 <mss 1460,sackOK,nop,nop,nop,wscale 7, mp_capable b> 
+0.2  < . 1:1(0) ack 1 win 257 <mp_capable a b, dss dack4=trunc_r64_hmac(b)+1>  
+0  accept(3, ..., ...) = 4 

// Send 3 data segments
/* The initial data sequence number (IDSN) = least significant 64
   bits of the SHA-1 hash of the host's key 
 */

+0 < P. 1:1001(1000) ack 1 win 450 <dss dack4=trunc_r64_hmac(b)+1 dsn4=trunc_r64_hmac(a)+1  >
+0 > . 1:1(0) ack 1001 <dss dack4=trunc_r64_hmac(a)+1001>

+0 < P. 1001:2001(1000) ack 1 win 450  <dss dack4=trunc_r64_hmac(b)+1 dsn4=trunc_r64_hmac(a)+1001 >
+0 > . 1:1(0) ack 2001 <dss dack4=trunc_r64_hmac(a)+2001>

+0 < P. 2001:3001(1000) ack 1 win 450  <dss dack4=trunc_r64_hmac(b)+1 dsn4=trunc_r64_hmac(a)+2001 > 
+0 > . 1:1(0) ack 3001 <dss dack4=trunc_r64_hmac(a)+3001>
