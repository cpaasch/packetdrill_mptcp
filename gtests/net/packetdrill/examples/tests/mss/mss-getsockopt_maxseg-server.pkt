/* mptcp 0.88
 * Test that getsockopt of TCP_MAXSEG works on passive/server TCP connections.
 * In this variant we test that a simple query of segment size works.
 */

// Set up a listening socket.
0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
0.000 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
0.000 bind(3, ..., ...) = 0

//0.000 setsockopt(3, SOL_TCP, TCP_MAXSEG, [800], 4) = 0

0.000 listen(3, 1) = 0

//0.000 setsockopt(3, SOL_TCP, TCP_MAXSEG, [800], 4) = 0
0.000 getsockopt(3, SOL_TCP, TCP_MAXSEG, [536], [4]) = 0


// Establish a connection, 1028 = data + DSS option 
0.100  < S 0:0(0) win 32792 <mss 1020,sackOK,nop,nop,nop,wscale 7, mp_capable a>
0.100  > S. 0:0(0) ack 1 win 28800 <mss 1460,sackOK,nop,nop,nop,wscale 7, mp_capable b>
0.200  < . 1:1(0) ack 1 win 257 <mp_capable a b>
0.200  accept(3, ..., ...) = 4

// Test if the maximum msegment size is 1000
0.400 getsockopt(4, SOL_TCP, TCP_MAXSEG, [1000], [4]) = 0

// Test if the maximum msegment size is 1000
0.400 setsockopt(3, SOL_TCP, TCP_MAXSEG, [800], 4) = 0

// TODO(redward): the following is not as expected, should we modify it?
0.400 getsockopt(4, SOL_TCP, TCP_MAXSEG, [1000], [4]) = 0

// IW10 MSS should yield outgoing TSO packet with 10*1100 == 11000 bytes:
//0.600 write(4, ..., 1500) = 1500
//0.600 > . 1:1001(1000) ack 1 <...>
