/* mptcp 0.88
 * A simple test using tcp_nodelay from initiator
 * Example: write 3 times with 4, 5 and 6 bytes respectively on the socket.
 * First packet is sent, the other 2 are waiting for the first Ack, then 
 * the 2 other writes (5 and 6 bytes) are put together and sent after that
 */

0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
0.000 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
0.000 bind(3, ..., ...) = 0
0.000 listen(3, 1) = 0


0.100  < S 0:0(0) win 32792 <mss 1028,sackOK,nop,nop,nop,wscale 7,mp_capable a>
0.100  > S. 0:0(0) ack 1 win 28800 <mss 1460,sackOK,nop,nop,nop,wscale 7,mp_capable b>
0.200  < . 1:1(0) ack 1 win 257 <mp_capable a b>
0.200  accept(3, ..., ...) = 4

// Set TCP_NODELAY disabled => Nagle algorithm is on
+0 setsockopt(4, IPPROTO_TCP, TCP_NODELAY, [0], 4) = 0

// Write 3 packets on the socket
+0  write(4, ..., 4) = 4
+0  write(4, ..., 5) = 5
+0  write(4, ..., 6) = 6

// Send first packet (4 bytes)
+0  > P. 1:5(4) ack 1 win 450 <dss dack4=trunc_r64_hmac(a)+1 dsn4=trunc_r64_hmac(b) + 1 >
+.1 < . 1:1(0) ack 5 win 257 <dss dack4=trunc_r64_hmac(b) + 5> 

// Wait first Ack then send the left packets are sent in one segment (5+6)
+0  > P. 5:16(11) ack 1 win 450 <dss dack4=trunc_r64_hmac(a)+1 dsn4=trunc_r64_hmac(b) + 5 >
+.1 < . 1:1(0) ack 16 win 257 <dss dack4=trunc_r64_hmac(b) + 16> 





